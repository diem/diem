version: 2.1

commands:
  env_setup:
    description: Environment Setup
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Setup Env
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=myapp' >> $BASH_ENV
            echo 'export CARGO_INCREMENTAL=0' >> $BASH_ENV
  sccache_setup:
    steps:
      - run:
          name: Set Up sccache Environment
          command: |
            echo 'export SCCACHE_CACHE_SIZE=2G' >> $BASH_ENV
            echo 'export RUSTC_WRAPPER=sccache' >> $BASH_ENV
            echo 'export CC="sccache cc"' >> $BASH_ENV
            echo 'export CXX="sccache c++"' >> $BASH_ENV
  restore_sccache_cache:
    steps:
      - restore_cache:
          name: Restore sccache Cache
          key: sccache-cache-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save_sccache_cache:
    steps:
      - run:
          name: Show sccache Stats
          command: sccache -s
      - save_cache:
          name: Save sccache Cache
          key: sccache-cache-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

jobs:
  build:
    docker:
      - image: 853397791086.dkr.ecr.us-west-2.amazonaws.com/github_circleci:latest
        aws_auth:
          aws_access_key_id: $ECR_RO_ACCESS_KEY_ID
          aws_secret_access_key: $ECR_RO_SECRET_ACCESS_KEY
    resource_class: 2xlarge
    steps:
      - env_setup
      - sccache_setup
      - restore_sccache_cache
      - run:
          name: Git Hooks and Checks
          command: ./scripts/git-checks.sh
      - run:
          name: Linting
          command: |
            ./scripts/nightly_features.sh
            ./scripts/clippy.sh
            cargo fmt -- --check
      - run:
          name: Build All Targets
          command: RUST_BACKTRACE=1 cargo build -j 16 --all --all-targets
      - run:
          name: Run All Unit Tests
          command: RUST_BACKTRACE=1 cargo test --all --exclude testsuite
      - run:
          name: Run All End to End Tests
          command: RUST_BACKTRACE=1 cargo test --package testsuite
      - save_sccache_cache
  validate-config:
    description: Validate that committed docker configs are up to date
    docker:
      - image: 853397791086.dkr.ecr.us-west-2.amazonaws.com/github_circleci:latest
        aws_auth:
          aws_access_key_id: $ECR_RO_ACCESS_KEY_ID
          aws_secret_access_key: $ECR_RO_SECRET_ACCESS_KEY
    resource_class: 2xlarge
    steps:
      - env_setup
      - sccache_setup
      - restore_sccache_cache
      - run:
          # generate config; diff config to existing one
          name: Validate Validator-Sets Configs
          command: ./scripts/circle_validate_configs.sh
      - save_sccache_cache
  audit:
    docker:
      - image: circleci/rust:stretch
    resource_class: xlarge
    steps:
      - env_setup
      - run:
          name: Cargo Audit
          command: |
            cargo install --force cargo-audit
            cargo generate-lockfile
            cargo audit
  terraform:
    docker:
      - image: hashicorp/terraform
    resource_class: small
    steps:
      - checkout
      - run:
          name: Terraform init
          command: terraform init
          working_directory: terraform/
      - run:
          name: Terraform validate
          command: terraform validate
          working_directory: terraform/

workflows:
  commit-workflow:
    jobs:
      - build
      - validate-config
      - terraform

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "14 14 * * *"
          filters:
            branches:
              only: master
    jobs:
      - audit
