initSidebarItems({"constant":[["REQUEST_ID_HEADER","A header set with a unique UUID (according to RFC4122 with “-”’s included) for the request, used for tracking requests and debugging. Responses must have the same string in the X-REQUEST-ID header value as the requests they correspond to."],["REQUEST_SENDER_ADDRESS","A header with the HTTP request sender’s VASP DIP-5 address used in the command object. The HTTP request sender must use the compliance key of the VASP account linked with this address to sign the request JWS body, and the request receiver uses this address to find the request sender’s compliance key to verify the JWS signature. For example: VASP A transfers funds to VASP B. The HTTP request A sends to B contains X-REQUEST-SENDER-ADDRESS as VASP A’s address. An HTTP request B sends to A should contain VASP B’s address as X-REQUEST-SENDER-ADDRESS."]],"enum":[["AbortCode",""],["ActionType",""],["Command",""],["CommandStatus",""],["ErrorCode",""],["KycDataObjectType",""],["KycDataObjectVersion",""],["OffChainErrorType",""],["Status",""]],"struct":[["AddressObject","Represents a physical address"],["CommandRequestObject",""],["CommandResponseObject",""],["KycDataObject","A `KycDataObject` represents the required information for a single subaddress. Proof of non-repudiation is provided by the signatures included in the JWS payloads. The only mandatory fields are `payload_version` and `type`. All other fields are optional from the point of view of the protocol – however they may need to be included for another VASP to be ready to settle the payment."],["NationalIdObject","Represents a national ID."],["OffChainError",""],["PaymentActionObject",""],["PaymentActorObject","A `PaymentActorObject` represents a participant in a payment - either sender or receiver. It also includes the status of the actor, indicates missing information or willingness to settle or abort the payment, and the Know-Your-Customer information of the customer involved in the payment."],["PaymentCommandObject",""],["PaymentObject","Some fields are immutable after they are defined once. Others can be updated multiple times (see below). Updating immutable fields with a different value results in a Command error."],["StatusObject",""],["WriteOnceError",""]]});