initSidebarItems({"mod":[["access_path","Suppose we have the following data structure in a smart contract:"],["account_address",""],["account_config",""],["account_state",""],["account_state_blob",""],["block_info",""],["block_metadata",""],["chain_id",""],["contract_event",""],["diem_id_identifier","This file implements length and character set limited string types needed for DiemID as defined by DIP-10: https://github.com/diem/dip/blob/main/dips/dip-10.md"],["diem_timestamp",""],["epoch_change",""],["epoch_state",""],["event",""],["ledger_info",""],["mempool_status",""],["move_resource",""],["network_address",""],["nibble","`Nibble` represents a four-bit unsigned integer."],["on_chain_config",""],["proof",""],["proptest_types",""],["serde_helper",""],["state_proof",""],["test_helpers",""],["transaction",""],["trusted_state",""],["validator_config",""],["validator_info",""],["validator_signer",""],["validator_verifier",""],["vm_status",""],["waypoint",""],["write_set","For each transaction the VM executes, the VM will output a `WriteSet` that contains each access path it updates. For each access path, the VM can either give its new value or delete it."]],"struct":[["PeerId","A struct that represents an account address."]]});