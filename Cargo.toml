[workspace]
resolver = "2"

members = [
    "client/assets-proof",
    "client/faucet",
    "client/json-rpc",
    "client/swiss-knife",
    "common/bitvec",
    "common/bounded-executor",
    "common/channel",
    "common/channel/many-keys-stress-test",
    "common/crash-handler",
    "common/datatest-stable",
    "common/debug-interface",
    "common/diemdoc",
    "common/fallible",
    "common/infallible",
    "common/logger",
    "common/logger/derive",
    "common/metrics",
    "common/metrics-core",
    "common/nibble",
    "common/num-variants",
    "common/proptest-helpers",
    "common/proxy",
    "common/rate-limiter",
    "common/retrier",
    "common/short-hex-str",
    "common/subscription-service",
    "common/temppath",
    "common/time-service",
    "common/workspace-hack",
    "config",
    "config/generate-key",
    "config/global-constants",
    "config/management",
    "config/management/genesis",
    "config/management/network-address-encryption",
    "config/management/operational",
    "config/seed-peer-generator",
    "consensus",
    "consensus/consensus-types",
    "consensus/safety-rules",
    "crypto/crypto",
    "crypto/crypto-derive",
    "devtools/x",
    "devtools/x-core",
    "devtools/x-lint",
    "diem-node",
    "execution/db-bootstrapper",
    "execution/execution-correctness",
    "execution/executor",
    "execution/executor-benchmark",
    "execution/executor-test-helpers",
    "execution/executor-types",
    "json-rpc",
    "json-rpc/types",
    "language/benchmarks",
    "language/borrow-graph",
    "language/bytecode-verifier",
    "language/bytecode-verifier/bytecode-verifier-tests",
    "language/bytecode-verifier/invalid-mutations",
    "language/compiler",
    "language/compiler/bytecode-source-map",
    "language/compiler/ir-to-bytecode",
    "language/compiler/ir-to-bytecode/syntax",
    "language/diem-framework",
    "language/diem-framework/releases",
    "language/diem-tools/diem-events-fetcher",
    "language/diem-tools/diem-validator-interface",
    "language/diem-tools/transaction-replay",
    "language/diem-tools/writeset-transaction-generator",
    "language/diem-vm",
    "language/e2e-testsuite",
    "language/ir-testsuite",
    "language/move-core/types",
    "language/move-ir/types",
    "language/move-lang",
    "language/move-lang/functional-tests",
    "language/move-lang/ir-utils",
    "language/move-lang/test-utils",
    "language/move-model",
    "language/move-prover",
    "language/move-prover/abigen",
    "language/move-prover/boogie-backend",
    "language/move-prover/bytecode",
    "language/move-prover/docgen",
    "language/move-prover/errmapgen",
    "language/move-prover/lab",
    "language/move-prover/test-utils",
    "language/move-stdlib",
    "language/move-vm/integration-tests",
    "language/move-vm/natives",
    "language/move-vm/runtime",
    "language/move-vm/test-utils",
    "language/move-vm/types",
    "language/testing-infra/e2e-tests",
    "language/testing-infra/functional-tests",
    "language/testing-infra/module-generation",
    "language/testing-infra/test-generation",
    "language/tools/disassembler",
    "language/tools/genesis-viewer",
    "language/tools/move-bytecode-viewer",
    "language/tools/move-cli",
    "language/tools/move-coverage",
    "language/tools/move-explain",
    "language/tools/resource-viewer",
    "language/tools/vm-genesis",
    "language/transaction-builder/generator",
    "language/vm",
    "language/vm/serializer-tests",
    "mempool",
    "network",
    "network/builder",
    "network/memsocket",
    "network/netcore",
    "network/simple-onchain-discovery",
    "network/socket-bench-server",
    "sdk",
    "sdk/client",
    "sdk/compatibility",
    "sdk/offchain",
    "sdk/transaction-builder",
    "secure/key-manager",
    "secure/net",
    "secure/push-metrics",
    "secure/storage",
    "secure/storage/github",
    "secure/storage/vault",
    "state-sync",
    "storage/accumulator",
    "storage/backup/backup-cli",
    "storage/backup/backup-service",
    "storage/diemdb",
    "storage/diemdb-benchmark",
    "storage/diemsum",
    "storage/inspector",
    "storage/jellyfish-merkle",
    "storage/schemadb",
    "storage/scratchpad",
    "storage/state-view",
    "storage/storage-client",
    "storage/storage-interface",
    "storage/storage-service",
    "testsuite/cli",
    "testsuite/cli/diem-wallet",
    "testsuite/cluster-test",
    "testsuite/diem-fuzzer",
    "testsuite/diem-fuzzer/fuzz",
    "testsuite/diem-swarm",
    "testsuite/forge",
    "testsuite/generate-format",
    "testsuite/smoke-test",
    "testsuite/smoke-test/attribute",
    "types",
    "vm-validator",
]

# NOTE: default-members is the complete list of binaries that form the "production Diem codebase". These members should
# never include crates that require fuzzing features or test features. These are the crates we want built with no extra
# test-only code included.
#
# For more, see the "Conditional compilation for tests" section in documentation/coding_guidelines.md.
default-members = [
    "common/rate-limiter",
    "config/generate-key",
    "config/management/genesis",
    "config/management/operational",
    "config/seed-peer-generator",
    "consensus/safety-rules",
    "client/assets-proof",
    "client/faucet",
    "client/swiss-knife",
    "execution/db-bootstrapper",
    "execution/execution-correctness",
    "language/compiler",
    "language/diem-framework",
    "language/move-prover",
    "language/move-prover/lab",
    "language/move-lang",
    "language/move-stdlib",
    "language/tools/disassembler",
    "language/tools/move-bytecode-viewer",
    "language/tools/genesis-viewer",
    "language/tools/move-cli",
    "language/tools/move-coverage",
    "language/diem-tools/diem-events-fetcher",
    "language/diem-tools/transaction-replay",
    "language/diem-tools/writeset-transaction-generator",
    "language/tools/move-explain",
    "language/transaction-builder/generator",
    "diem-node",
    "sdk",
    "secure/key-manager",
    "storage/backup/backup-cli",
    "storage/diemsum",
    "storage/inspector",
]

[profile.release]
debug = true

[profile.bench]
debug = true

# Build guppy in opt mode so that x commands are faster.
[profile.dev.package.guppy]
opt-level = 3
