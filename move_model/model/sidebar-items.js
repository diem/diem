initSidebarItems({"constant":[["SCRIPT_BYTECODE_FUN_NAME","Names used in the bytecode/AST to represent the main function of a script"],["SCRIPT_MODULE_NAME","Constants"]],"enum":[["FunctionVisibility","`Visibility` restricts the accessibility of the associated entity."],["VerificationScope","Verification Scope"]],"struct":[["AbilityConstraint",""],["AbilitySet","A set of `Ability`s"],["EnvDisplay","Struct a helper type for implementing fmt::Display depending on GlobalEnv"],["FieldData","Field Environment"],["FieldEnv",""],["FieldId","Identifier for a field of a structure, relative to struct."],["FunId","Identifier for a Move function, relative to module."],["FunctionData",""],["FunctionEnv",""],["GlobalEnv","Global Environment"],["GlobalId","A global id. Instances of this type represent unique identifiers relative to `GlobalEnv`."],["Loc","Locations"],["LocDisplay","Formatting"],["ModuleData","Module Environment"],["ModuleEnv","Represents a module environment."],["ModuleId","Identifier for a module."],["NamedConstantData","Named Constant Environment"],["NamedConstantEnv",""],["NamedConstantId","Identifier for a named constant, relative to module."],["NodeId","Identifier for a node in the AST, relative to a module. This is used to associate attributes with the node, like source location and type."],["Parameter","Represents a parameter."],["QualifiedId","Some identifier qualified by a module."],["QualifiedInstId","Some identifier qualified by a module and a type instantiation."],["SchemaId","Identifier for a schema."],["SpecFunId","Identifier for a specification function, relative to module."],["SpecVarId","Identifier for a specification variable, relative to module."],["StructData","Struct Environment"],["StructEnv",""],["StructId","Identifier for a structure/resource, relative to module."],["TypeParameter","Function Environment"]],"trait":[["GetNameString",""]],"type":[["MoveIrLoc","Alias for the Loc variant of MoveIR. This uses a `&static str` instead of `FileId` for the file name."],["RawIndex","Identifiers"]]});