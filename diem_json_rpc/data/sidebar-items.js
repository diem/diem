initSidebarItems({"fn":[["get_account","Returns account state (AccountView) by given address"],["get_account_state",""],["get_account_state_with_proof","Returns the account state to the client, alongside a proof relative to the version and ledger_version specified by the client. If version or ledger_version are not specified, the latest known versions will be used."],["get_account_transaction","Returns account transaction by account and sequence_number"],["get_account_transactions","Returns all account transactions"],["get_account_transactions_with_proofs","Return a serialized list of an accountâ€™s transactions along with a proof for each transaction."],["get_accumulator_consistency_proof","Returns a proof that allows a client to extend their accumulator summary from `client_known_version` (or pre-genesis if `None`) to `ledger_version`."],["get_currencies","Returns meta information about supported currencies"],["get_event_by_version_with_proof","Returns the latest event at or below the requested version along with proof."],["get_events","Returns events by given access path"],["get_events_with_proofs","Returns events by given access path along with their proofs"],["get_metadata","Returns the blockchain metadata for a specified version. If no version is specified, default to returning the current blockchain metadata Can be used to verify that target Full Node is up-to-date"],["get_network_status","Returns the number of peers this node is connected to"],["get_state_proof","Returns proof of new state relative to version known to client"],["get_transactions","Returns transactions by range"],["get_transactions_with_proofs","Returns transactions by range with proofs"]]});