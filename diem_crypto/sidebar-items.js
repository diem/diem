initSidebarItems({"mod":[["compat","Wrapper structs for types that need RustCrypto traits implemented."],["ed25519","This module provides an API for the PureEdDSA signature scheme over the ed25519 twisted Edwards curve as defined in RFC8032."],["error","Rexport the error types needed for the various crypto traits"],["hash","This module defines traits and implementations of cryptographic hash functions for the Diem project."],["hkdf","An implementation of HKDF, the HMAC-based Extract-and-Expand Key Derivation Function for the Diem project based on RFC 5869."],["multi_ed25519","This module provides an API for the accountable threshold multi-sig PureEdDSA signature scheme over the ed25519 twisted Edwards curve as defined in RFC8032."],["noise","Noise is a protocol framework which we use in Diem to encrypt and authenticate communications between nodes of the network."],["test_utils","Internal module containing convenience utility functions mainly for testing"],["traits","This module provides a generic set of traits for dealing with cryptographic primitives."],["x25519","An abstraction of x25519 elliptic curve keys required for Diffie-Hellman key exchange in the Diem project. Ideally, only `x25519::PrivateKey` and `x25519::PublicKey` should be used throughout the codebase, until the bytes are actually used in cryptographic operations."]]});