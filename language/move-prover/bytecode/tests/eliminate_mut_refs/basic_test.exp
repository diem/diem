============ initial translation from Move ================

fun TestEliminateMutRefs::test1(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var x_ref: &mut u64
     var $t3: u64
     var $t4: TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: &mut TestEliminateMutRefs::R
     var $t7: &mut u64
     var $t8: u64
     var $t9: &mut u64
     var $t10: TestEliminateMutRefs::R
  0: $t3 := 3
  1: $t4 := pack TestEliminateMutRefs::R($t3)
  2: r := $t4
  3: $t5 := borrow_local(r)
  4: r_ref := $t5
  5: $t6 := move(r_ref)
  6: $t7 := borrow_field<TestEliminateMutRefs::R>.x($t6)
  7: x_ref := $t7
  8: $t8 := 0
  9: $t9 := move(x_ref)
 10: write_ref($t9, $t8)
 11: $t10 := move(r)
 12: return $t10
}


fun TestEliminateMutRefs::test2(x_ref: &mut u64, v: u64) {
     var $t2: u64
     var $t3: &mut u64
  0: $t2 := copy(v)
  1: $t3 := move(x_ref)
  2: write_ref($t3, $t2)
  3: return ()
}


pub fun TestEliminateMutRefs::test3(r_ref: &mut TestEliminateMutRefs::R, v: u64) {
     var x_ref: &mut u64
     var $t3: &mut TestEliminateMutRefs::R
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
  0: $t3 := move(r_ref)
  1: $t4 := borrow_field<TestEliminateMutRefs::R>.x($t3)
  2: x_ref := $t4
  3: $t5 := move(x_ref)
  4: $t6 := copy(v)
  5: TestEliminateMutRefs::test2($t5, $t6)
  6: return ()
}


fun TestEliminateMutRefs::test4(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var $t2: u64
     var $t3: TestEliminateMutRefs::R
     var $t4: &mut TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
  0: $t2 := 3
  1: $t3 := pack TestEliminateMutRefs::R($t2)
  2: r := $t3
  3: $t4 := borrow_local(r)
  4: r_ref := $t4
  5: $t5 := move(r_ref)
  6: $t6 := 0
  7: TestEliminateMutRefs::test3($t5, $t6)
  8: $t7 := move(r)
  9: return $t7
}


pub fun TestEliminateMutRefs::test5(r_ref: &mut TestEliminateMutRefs::R): &mut u64 {
     var $t1: &mut TestEliminateMutRefs::R
     var $t2: &mut u64
  0: $t1 := move(r_ref)
  1: $t2 := borrow_field<TestEliminateMutRefs::R>.x($t1)
  2: return $t2
}


fun TestEliminateMutRefs::test6(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var x_ref: &mut u64
     var $t3: u64
     var $t4: TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: &mut TestEliminateMutRefs::R
     var $t7: &mut u64
     var $t8: &mut u64
     var $t9: u64
     var $t10: TestEliminateMutRefs::R
  0: $t3 := 3
  1: $t4 := pack TestEliminateMutRefs::R($t3)
  2: r := $t4
  3: $t5 := borrow_local(r)
  4: r_ref := $t5
  5: $t6 := move(r_ref)
  6: $t7 := TestEliminateMutRefs::test5($t6)
  7: x_ref := $t7
  8: $t8 := move(x_ref)
  9: $t9 := 0
 10: TestEliminateMutRefs::test2($t8, $t9)
 11: $t10 := move(r)
 12: return $t10
}


fun TestEliminateMutRefs::test7(b: bool) {
     var r1: TestEliminateMutRefs::R
     var r2: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var $t4: u64
     var $t5: TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: &mut TestEliminateMutRefs::R
     var $t9: bool
     var $t10: &mut TestEliminateMutRefs::R
     var $t11: &mut TestEliminateMutRefs::R
     var $t12: &mut TestEliminateMutRefs::R
     var $t13: u64
  0: $t4 := 3
  1: $t5 := pack TestEliminateMutRefs::R($t4)
  2: r1 := $t5
  3: $t6 := 4
  4: $t7 := pack TestEliminateMutRefs::R($t6)
  5: r2 := $t7
  6: $t8 := borrow_local(r1)
  7: r_ref := $t8
  8: $t9 := copy(b)
  9: if ($t9) goto L0 else goto L1
 10: L1:
 11: goto L2
 12: L0:
 13: $t10 := move(r_ref)
 14: destroy($t10)
 15: $t11 := borrow_local(r2)
 16: r_ref := $t11
 17: goto L2
 18: L2:
 19: $t12 := move(r_ref)
 20: $t13 := 0
 21: TestEliminateMutRefs::test3($t12, $t13)
 22: return ()
}


fun TestEliminateMutRefs::test8(b: bool, n: u64, r_ref: &mut TestEliminateMutRefs::R) {
     var r1: TestEliminateMutRefs::R
     var r2: TestEliminateMutRefs::R
     var t_ref: &mut TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: u64
     var $t9: TestEliminateMutRefs::R
     var $t10: &mut TestEliminateMutRefs::R
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: &mut TestEliminateMutRefs::R
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: u64
     var $t19: bool
     var $t20: &mut TestEliminateMutRefs::R
     var $t21: &mut TestEliminateMutRefs::R
     var $t22: u64
     var $t23: u64
     var $t24: u64
     var $t25: bool
     var $t26: &mut TestEliminateMutRefs::R
     var $t27: &mut TestEliminateMutRefs::R
     var $t28: u64
     var $t29: &mut TestEliminateMutRefs::R
     var $t30: &mut TestEliminateMutRefs::R
     var $t31: u64
  0: $t6 := 3
  1: $t7 := pack TestEliminateMutRefs::R($t6)
  2: r1 := $t7
  3: $t8 := 4
  4: $t9 := pack TestEliminateMutRefs::R($t8)
  5: r2 := $t9
  6: $t10 := borrow_local(r2)
  7: t_ref := $t10
  8: goto L7
  9: L7:
 10: $t11 := 0
 11: $t12 := copy(n)
 12: $t13 := <($t11, $t12)
 13: if ($t13) goto L0 else goto L1
 14: L1:
 15: goto L2
 16: L0:
 17: $t14 := move(t_ref)
 18: destroy($t14)
 19: $t15 := copy(n)
 20: $t16 := 2
 21: $t17 := /($t15, $t16)
 22: $t18 := 0
 23: $t19 := ==($t17, $t18)
 24: if ($t19) goto L3 else goto L4
 25: L4:
 26: goto L5
 27: L3:
 28: $t20 := borrow_local(r1)
 29: t_ref := $t20
 30: goto L6
 31: L5:
 32: $t21 := borrow_local(r2)
 33: t_ref := $t21
 34: goto L6
 35: L6:
 36: $t22 := copy(n)
 37: $t23 := 1
 38: $t24 := -($t22, $t23)
 39: n := $t24
 40: goto L7
 41: L2:
 42: $t25 := copy(b)
 43: if ($t25) goto L8 else goto L9
 44: L9:
 45: goto L10
 46: L8:
 47: $t26 := move(t_ref)
 48: destroy($t26)
 49: $t27 := move(r_ref)
 50: $t28 := 0
 51: TestEliminateMutRefs::test3($t27, $t28)
 52: goto L11
 53: L10:
 54: $t29 := move(r_ref)
 55: destroy($t29)
 56: $t30 := move(t_ref)
 57: $t31 := 0
 58: TestEliminateMutRefs::test3($t30, $t31)
 59: goto L11
 60: L11:
 61: return ()
}

============ after pipeline `eliminate_mut_refs` ================

fun TestEliminateMutRefs::test1(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var x_ref: &mut u64
     var $t3: u64
     var $t4: TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: &mut TestEliminateMutRefs::R
     var $t7: &mut u64
     var $t8: u64
     var $t9: &mut u64
     var $t10: TestEliminateMutRefs::R
  0: $t3 := 3
  1: $t4 := pack TestEliminateMutRefs::R($t3)
  2: r := $t4
  3: $t5 := borrow_local(r)
  4: r_ref := $t5
  5: $t6 := move(r_ref)
  6: $t7 := borrow_field<TestEliminateMutRefs::R>.x($t6)
  7: x_ref := $t7
  8: $t8 := 0
  9: $t9 := move(x_ref)
 10: write_ref($t9, $t8)
 11: $t10 := move(r)
 12: return $t10
}


fun TestEliminateMutRefs::test2(x_ref: u64, v: u64): u64 {
     var $t2: u64
     var $t3: &mut u64
     var $t4: u64
     var $t5: &mut u64
     var $t6: u64
  0: $t4 := move(x_ref)
  1: $t6 := move(v)
  2: $t5 := borrow_local($t4)
  3: $t2 := copy($t6)
  4: $t3 := move($t5)
  5: write_ref($t3, $t2)
  6: return $t4
}


pub fun TestEliminateMutRefs::test3(r_ref: TestEliminateMutRefs::R, v: u64): TestEliminateMutRefs::R {
     var x_ref: &mut u64
     var $t3: &mut TestEliminateMutRefs::R
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: &mut TestEliminateMutRefs::R
     var $t9: u64
     var $t10: u64
  0: $t7 := move(r_ref)
  1: $t9 := move(v)
  2: $t8 := borrow_local($t7)
  3: $t3 := move($t8)
  4: $t4 := borrow_field<TestEliminateMutRefs::R>.x($t3)
  5: x_ref := $t4
  6: $t5 := move(x_ref)
  7: $t6 := copy($t9)
  8: $t10 := read_ref($t5)
  9: $t10 := TestEliminateMutRefs::test2($t10, $t6)
 10: write_ref($t5, $t10)
 11: return $t7
}


fun TestEliminateMutRefs::test4(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var $t2: u64
     var $t3: TestEliminateMutRefs::R
     var $t4: &mut TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: TestEliminateMutRefs::R
  0: $t2 := 3
  1: $t3 := pack TestEliminateMutRefs::R($t2)
  2: r := $t3
  3: $t4 := borrow_local(r)
  4: r_ref := $t4
  5: $t5 := move(r_ref)
  6: $t6 := 0
  7: $t8 := read_ref($t5)
  8: $t8 := TestEliminateMutRefs::test3($t8, $t6)
  9: write_ref($t5, $t8)
 10: $t7 := move(r)
 11: return $t7
}


pub fun TestEliminateMutRefs::test5(r_ref: TestEliminateMutRefs::R): (&mut u64, TestEliminateMutRefs::R) {
     var $t1: &mut TestEliminateMutRefs::R
     var $t2: &mut u64
     var $t3: TestEliminateMutRefs::R
     var $t4: &mut TestEliminateMutRefs::R
  0: $t3 := move(r_ref)
  1: $t4 := borrow_local($t3)
  2: $t1 := move($t4)
  3: $t2 := borrow_field<TestEliminateMutRefs::R>.x($t1)
  4: return ($t2, $t3)
}


fun TestEliminateMutRefs::test6(): TestEliminateMutRefs::R {
     var r: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var x_ref: &mut u64
     var $t3: u64
     var $t4: TestEliminateMutRefs::R
     var $t5: &mut TestEliminateMutRefs::R
     var $t6: &mut TestEliminateMutRefs::R
     var $t7: &mut u64
     var $t8: &mut u64
     var $t9: u64
     var $t10: TestEliminateMutRefs::R
     var $t11: u64
     var $t12: TestEliminateMutRefs::R
  0: $t3 := 3
  1: $t4 := pack TestEliminateMutRefs::R($t3)
  2: r := $t4
  3: $t5 := borrow_local(r)
  4: r_ref := $t5
  5: $t6 := move(r_ref)
  6: $t12 := read_ref($t6)
  7: ($t7, $t12) := TestEliminateMutRefs::test5($t12)
  8: write_ref($t6, $t12)
  9: splice[0 -> $t6]($t7)
 10: x_ref := $t7
 11: $t8 := move(x_ref)
 12: $t9 := 0
 13: $t11 := read_ref($t8)
 14: $t11 := TestEliminateMutRefs::test2($t11, $t9)
 15: write_ref($t8, $t11)
 16: $t10 := move(r)
 17: return $t10
}


fun TestEliminateMutRefs::test7(b: bool) {
     var r1: TestEliminateMutRefs::R
     var r2: TestEliminateMutRefs::R
     var r_ref: &mut TestEliminateMutRefs::R
     var $t4: u64
     var $t5: TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: &mut TestEliminateMutRefs::R
     var $t9: bool
     var $t10: &mut TestEliminateMutRefs::R
     var $t11: &mut TestEliminateMutRefs::R
     var $t12: &mut TestEliminateMutRefs::R
     var $t13: u64
     var $t14: bool
     var $t15: TestEliminateMutRefs::R
  0: $t14 := move(b)
  1: $t4 := 3
  2: $t5 := pack TestEliminateMutRefs::R($t4)
  3: r1 := $t5
  4: $t6 := 4
  5: $t7 := pack TestEliminateMutRefs::R($t6)
  6: r2 := $t7
  7: $t8 := borrow_local(r1)
  8: r_ref := $t8
  9: $t9 := copy($t14)
 10: if ($t9) goto L0 else goto L1
 11: L1:
 12: goto L2
 13: L0:
 14: $t10 := move(r_ref)
 15: destroy($t10)
 16: $t11 := borrow_local(r2)
 17: r_ref := $t11
 18: goto L2
 19: L2:
 20: $t12 := move(r_ref)
 21: $t13 := 0
 22: $t15 := read_ref($t12)
 23: $t15 := TestEliminateMutRefs::test3($t15, $t13)
 24: write_ref($t12, $t15)
 25: return ()
}


fun TestEliminateMutRefs::test8(b: bool, n: u64, r_ref: TestEliminateMutRefs::R): TestEliminateMutRefs::R {
     var r1: TestEliminateMutRefs::R
     var r2: TestEliminateMutRefs::R
     var t_ref: &mut TestEliminateMutRefs::R
     var $t6: u64
     var $t7: TestEliminateMutRefs::R
     var $t8: u64
     var $t9: TestEliminateMutRefs::R
     var $t10: &mut TestEliminateMutRefs::R
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: &mut TestEliminateMutRefs::R
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: u64
     var $t19: bool
     var $t20: &mut TestEliminateMutRefs::R
     var $t21: &mut TestEliminateMutRefs::R
     var $t22: u64
     var $t23: u64
     var $t24: u64
     var $t25: bool
     var $t26: &mut TestEliminateMutRefs::R
     var $t27: &mut TestEliminateMutRefs::R
     var $t28: u64
     var $t29: &mut TestEliminateMutRefs::R
     var $t30: &mut TestEliminateMutRefs::R
     var $t31: u64
     var $t32: bool
     var $t33: u64
     var $t34: TestEliminateMutRefs::R
     var $t35: &mut TestEliminateMutRefs::R
     var $t36: TestEliminateMutRefs::R
  0: $t32 := move(b)
  1: $t33 := move(n)
  2: $t34 := move(r_ref)
  3: $t35 := borrow_local($t34)
  4: $t6 := 3
  5: $t7 := pack TestEliminateMutRefs::R($t6)
  6: r1 := $t7
  7: $t8 := 4
  8: $t9 := pack TestEliminateMutRefs::R($t8)
  9: r2 := $t9
 10: $t10 := borrow_local(r2)
 11: t_ref := $t10
 12: goto L7
 13: L7:
 14: $t11 := 0
 15: $t12 := copy($t33)
 16: $t13 := <($t11, $t12)
 17: if ($t13) goto L0 else goto L1
 18: L1:
 19: goto L2
 20: L0:
 21: $t14 := move(t_ref)
 22: destroy($t14)
 23: $t15 := copy($t33)
 24: $t16 := 2
 25: $t17 := /($t15, $t16)
 26: $t18 := 0
 27: $t19 := ==($t17, $t18)
 28: if ($t19) goto L3 else goto L4
 29: L4:
 30: goto L5
 31: L3:
 32: $t20 := borrow_local(r1)
 33: t_ref := $t20
 34: goto L6
 35: L5:
 36: $t21 := borrow_local(r2)
 37: t_ref := $t21
 38: goto L6
 39: L6:
 40: $t22 := copy($t33)
 41: $t23 := 1
 42: $t24 := -($t22, $t23)
 43: $t33 := $t24
 44: goto L7
 45: L2:
 46: $t25 := copy($t32)
 47: if ($t25) goto L8 else goto L9
 48: L9:
 49: goto L10
 50: L8:
 51: $t26 := move(t_ref)
 52: destroy($t26)
 53: $t27 := move($t35)
 54: $t28 := 0
 55: $t36 := read_ref($t27)
 56: $t36 := TestEliminateMutRefs::test3($t36, $t28)
 57: write_ref($t27, $t36)
 58: goto L11
 59: L10:
 60: $t29 := move($t35)
 61: destroy($t29)
 62: $t30 := move(t_ref)
 63: $t31 := 0
 64: $t36 := read_ref($t30)
 65: $t36 := TestEliminateMutRefs::test3($t36, $t31)
 66: write_ref($t30, $t36)
 67: goto L11
 68: L11:
 69: return $t34
}
