============ initial translation from Move ================

fun TestLiveVars::test1(r_ref: &TestLiveVars::R): u64 {
     var x_ref: &u64
     var $t2: &TestLiveVars::R
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
  0: $t2 := move(r_ref)
  1: $t3 := borrow_field<TestLiveVars::R>.x($t2)
  2: x_ref := $t3
  3: $t4 := move(x_ref)
  4: $t5 := read_ref($t4)
  5: return $t5
}


fun TestLiveVars::test2(b: bool): u64 {
     var r1: TestLiveVars::R
     var r2: TestLiveVars::R
     var r_ref: &TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: &TestLiveVars::R
     var $t9: bool
     var $t10: &TestLiveVars::R
     var $t11: &TestLiveVars::R
     var $t12: &TestLiveVars::R
     var $t13: u64
  0: $t4 := 3
  1: $t5 := pack TestLiveVars::R($t4)
  2: r1 := $t5
  3: $t6 := 4
  4: $t7 := pack TestLiveVars::R($t6)
  5: r2 := $t7
  6: $t8 := borrow_local(r1)
  7: r_ref := $t8
  8: $t9 := copy(b)
  9: if ($t9) goto L0 else goto L1
 10: L1:
 11: goto L2
 12: L0:
 13: $t10 := move(r_ref)
 14: destroy($t10)
 15: $t11 := borrow_local(r2)
 16: r_ref := $t11
 17: goto L2
 18: L2:
 19: $t12 := move(r_ref)
 20: $t13 := TestLiveVars::test1($t12)
 21: return $t13
}


fun TestLiveVars::test3(n: u64, r_ref: &TestLiveVars::R): u64 {
     var r1: TestLiveVars::R
     var r2: TestLiveVars::R
     var $t4: u64
     var $t5: TestLiveVars::R
     var $t6: u64
     var $t7: TestLiveVars::R
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: &TestLiveVars::R
     var $t12: u64
     var $t13: u64
     var $t14: u64
     var $t15: u64
     var $t16: bool
     var $t17: &TestLiveVars::R
     var $t18: &TestLiveVars::R
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: &TestLiveVars::R
     var $t23: u64
  0: $t4 := 3
  1: $t5 := pack TestLiveVars::R($t4)
  2: r1 := $t5
  3: $t6 := 4
  4: $t7 := pack TestLiveVars::R($t6)
  5: r2 := $t7
  6: goto L7
  7: L7:
  8: $t8 := 0
  9: $t9 := copy(n)
 10: $t10 := <($t8, $t9)
 11: if ($t10) goto L0 else goto L1
 12: L1:
 13: goto L2
 14: L0:
 15: $t11 := move(r_ref)
 16: destroy($t11)
 17: $t12 := copy(n)
 18: $t13 := 2
 19: $t14 := /($t12, $t13)
 20: $t15 := 0
 21: $t16 := ==($t14, $t15)
 22: if ($t16) goto L3 else goto L4
 23: L4:
 24: goto L5
 25: L3:
 26: $t17 := borrow_local(r1)
 27: r_ref := $t17
 28: goto L6
 29: L5:
 30: $t18 := borrow_local(r2)
 31: r_ref := $t18
 32: goto L6
 33: L6:
 34: $t19 := copy(n)
 35: $t20 := 1
 36: $t21 := -($t19, $t20)
 37: n := $t21
 38: goto L7
 39: L2:
 40: $t22 := move(r_ref)
 41: $t23 := TestLiveVars::test1($t22)
 42: return $t23
}

============ after pipeline `livevar` ================

fun TestLiveVars::test1(r_ref: TestLiveVars::R): u64 {
     var x_ref: u64
     var $t2: TestLiveVars::R
     // live vars: r_ref
  0: $t2 := move(r_ref)
     // live vars: $t2
  1: x_ref := get_field<TestLiveVars::R>.x($t2)
     // live vars: x_ref
  2: return x_ref
}


fun TestLiveVars::test2(b: bool): u64 {
     var r1: TestLiveVars::R
     var r2: TestLiveVars::R
     var r_ref: TestLiveVars::R
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     // live vars: b
  0: $t4 := move(b)
     // live vars: $t4
  1: $t5 := 3
     // live vars: $t4, $t5
  2: r1 := pack TestLiveVars::R($t5)
     // live vars: r1, $t4
  3: $t6 := 4
     // live vars: r1, $t4, $t6
  4: r2 := pack TestLiveVars::R($t6)
     // live vars: r1, r2, $t4
  5: r_ref := r1
     // live vars: r2, r_ref, $t4
  6: if ($t4) goto L0 else goto L1
     // live vars: r_ref
  7: L1:
     // live vars: r_ref
  8: goto L2
     // live vars: r2, r_ref
  9: L0:
     // live vars: r2, r_ref
 10: destroy(r_ref)
     // live vars: r2
 11: r_ref := r2
     // live vars: r_ref
 12: goto L2
     // live vars: r_ref
 13: L2:
     // live vars: r_ref
 14: $t7 := TestLiveVars::test1(r_ref)
     // live vars: $t7
 15: return $t7
}


fun TestLiveVars::test3(n: u64, r_ref: TestLiveVars::R): u64 {
     var r1: TestLiveVars::R
     var r2: TestLiveVars::R
     var $t4: TestLiveVars::R
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: u64
     // live vars: r_ref, $t9
  0: $t4 := move(r_ref)
     // live vars: $t4, $t9
  1: $t5 := 3
     // live vars: $t4, $t5, $t9
  2: r1 := pack TestLiveVars::R($t5)
     // live vars: r1, $t4, $t9
  3: $t6 := 4
     // live vars: r1, $t4, $t6, $t9
  4: r2 := pack TestLiveVars::R($t6)
     // live vars: r1, r2, $t4, $t9
  5: goto L7
     // live vars: r1, r2, $t4, $t9
  6: L7:
     // live vars: r1, r2, $t4, $t9
  7: $t7 := 0
     // live vars: r1, r2, $t4, $t7, $t9
  8: $t8 := <($t7, $t9)
     // live vars: r1, r2, $t4, $t8, $t9
  9: if ($t8) goto L0 else goto L1
     // live vars: $t4
 10: L1:
     // live vars: $t4
 11: goto L2
     // live vars: r1, r2, $t4, $t9
 12: L0:
     // live vars: r1, r2, $t4, $t9
 13: destroy($t4)
     // live vars: r1, r2, $t9
 14: $t10 := 2
     // live vars: r1, r2, $t9, $t10
 15: $t11 := /($t9, $t10)
     // live vars: r1, r2, $t9, $t11
 16: $t12 := 0
     // live vars: r1, r2, $t9, $t11, $t12
 17: $t13 := ==($t11, $t12)
     // live vars: r1, r2, $t9, $t13
 18: if ($t13) goto L3 else goto L4
     // live vars: r1, r2, $t9
 19: L4:
     // live vars: r1, r2, $t9
 20: goto L5
     // live vars: r1, r2, $t9
 21: L3:
     // live vars: r1, r2, $t9
 22: $t4 := r1
     // live vars: r1, r2, $t4, $t9
 23: goto L6
     // live vars: r1, r2, $t9
 24: L5:
     // live vars: r1, r2, $t9
 25: $t4 := r2
     // live vars: r1, r2, $t4, $t9
 26: goto L6
     // live vars: r1, r2, $t4, $t9
 27: L6:
     // live vars: r1, r2, $t4, $t9
 28: $t14 := 1
     // live vars: r1, r2, $t4, $t9, $t14
 29: $t9 := -($t9, $t14)
     // live vars: r1, r2, $t4, $t9
 30: goto L7
     // live vars: $t4
 31: L2:
     // live vars: $t4
 32: $t15 := TestLiveVars::test1($t4)
     // live vars: $t15
 33: return $t15
}
