Move prover returns: exiting with boogie verification errors
error: data invariant does not hold

    ┌── tests/sources/functional/mut_ref_accross_modules.move:21:9 ───
    │
 21 │         invariant value > 0;
    │         ^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mut_ref_accross_modules.move:64:5: decrement_invalid
    =         x = <redacted>,
    =         r = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:65:27: decrement_invalid

error: post-condition does not hold

    ┌── tests/sources/functional/mut_ref_accross_modules.move:30:9 ───
    │
 30 │         invariant global<TSum>(0x0).sum == spec_sum;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mut_ref_accross_modules.move:58:5: increment_invalid
    =         x = <redacted>,
    =         result = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:59:27: increment_invalid

error:  This assertion might not hold.

    ┌── tests/sources/functional/mut_ref_accross_modules.move:88:13 ───
    │
 88 │             assert x.value > 0;
    │             ^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mut_ref_accross_modules.move:86:5: private_data_invariant_invalid
    =         x = <redacted>

error: data invariant does not hold

    ┌── tests/sources/functional/mut_ref_accross_modules.move:21:9 ───
    │
 21 │         invariant value > 0;
    │         ^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/mut_ref_accross_modules.move:111:6: private_to_public_caller_invalid_data_invariant
    =     at tests/sources/functional/mut_ref_accross_modules.move:34:5: new (entry)
    =     at tests/sources/functional/mut_ref_accross_modules.move:35:17: new
    =         x = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:36:23: new
    =         r = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:37:9: new
    =         result = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:34:16: new
    =     at tests/sources/functional/mut_ref_accross_modules.move:72:5: private_decrement
    =         x = <redacted>,
    =         r = <redacted>,
    =         r = <redacted>,
    =         result = <redacted>
    =     at tests/sources/functional/mut_ref_accross_modules.move:73:27: private_decrement
    =     at tests/sources/functional/mut_ref_accross_modules.move:74:17: private_decrement
    =     at tests/sources/functional/mut_ref_accross_modules.move:75:23: private_decrement
    =     at tests/sources/functional/mut_ref_accross_modules.move:72:9: private_decrement
