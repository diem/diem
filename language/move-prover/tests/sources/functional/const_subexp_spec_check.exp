Move prover returns: exiting with boogie verification errors
error: subexpression is constant: Call(NodeId(12), Lt, [LocalVar(NodeId(10), Symbol(47)), Value(NodeId(11), Number(BigInt { sign: Plus, data: BigUint { data: [5] } }))]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:38:9 ───
    │
 38 │         requires x < 5;
    │         ^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(22), Not, [Call(NodeId(12), Lt, [LocalVar(NodeId(10), Symbol(47)), Value(NodeId(11), Number(BigInt { sign: Plus, data: BigUint { data: [5] } }))])]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:38:9 ───
    │
 38 │         requires x < 5;
    │         ^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(15), Gt, [LocalVar(NodeId(13), Symbol(47)), Value(NodeId(14), Number(BigInt { sign: Plus, data: BigUint { data: [3] } }))]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:39:9 ───
    │
 39 │         requires x > 3;
    │         ^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(23), Not, [Call(NodeId(15), Gt, [LocalVar(NodeId(13), Symbol(47)), Value(NodeId(14), Number(BigInt { sign: Plus, data: BigUint { data: [3] } }))])]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:39:9 ───
    │
 39 │         requires x > 3;
    │         ^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(18), Neq, [LocalVar(NodeId(16), Symbol(47)), Value(NodeId(17), Number(BigInt { sign: Plus, data: BigUint { data: [4] } }))]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:40:9 ───
    │
 40 │         requires x != 4;    // assume false
    │         ^^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(24), Not, [Call(NodeId(18), Neq, [LocalVar(NodeId(16), Symbol(47)), Value(NodeId(17), Number(BigInt { sign: Plus, data: BigUint { data: [4] } }))])]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:40:9 ───
    │
 40 │         requires x != 4;    // assume false
    │         ^^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(21), Eq, [LocalVar(NodeId(19), Symbol(47)), Value(NodeId(20), Number(BigInt { sign: Plus, data: BigUint { data: [4] } }))]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:41:9 ───
    │
 41 │         requires x == 4;    // asserts true
    │         ^^^^^^^^^^^^^^^^
    │

error: subexpression is constant: Call(NodeId(25), Not, [Call(NodeId(21), Eq, [LocalVar(NodeId(19), Symbol(47)), Value(NodeId(20), Number(BigInt { sign: Plus, data: BigUint { data: [4] } }))])]).

    ┌── tests/sources/functional/const_subexp_spec_check.move:41:9 ───
    │
 41 │         requires x == 4;    // asserts true
    │         ^^^^^^^^^^^^^^^^
    │
