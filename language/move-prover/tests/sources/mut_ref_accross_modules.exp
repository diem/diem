Move prover returns: exiting with boogie verification errors
error:  This assertion might not hold.

    ┌── tests/sources/mut_ref_accross_modules.move:76:13 ───
    │
 76 │             assert x.value > 0;
    │             ^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:74:5: data_invariant (entry)

error:  This assertion might not hold.

    ┌── tests/sources/mut_ref_accross_modules.move:16:9 ───
    │
 16 │         invariant value > 0;
    │         ^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:59:5: decrement_invalid (entry)
    =     at tests/sources/mut_ref_accross_modules.move:60:27: decrement_invalid
    =         x = <redacted>,
    =         x = <redacted>,
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:61:41: decrement_invalid
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:62:17: decrement_invalid
    =         x = <redacted>,
    =         r = <redacted>

error:  A postcondition might not hold on this return path.

    ┌── tests/sources/mut_ref_accross_modules.move:25:9 ───
    │
 25 │         invariant global<TSum>(0x0).sum == spec_sum;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:53:5: increment_invalid (entry)
    =     at tests/sources/mut_ref_accross_modules.move:54:27: increment_invalid
    =         x = <redacted>,
    =         x = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:53:5: increment_invalid (exit)

error:  This assertion might not hold.

    ┌── tests/sources/mut_ref_accross_modules.move:83:13 ───
    │
 83 │             assert x.value > 0;
    │             ^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:81:5: private_data_invariant_invalid (entry)

error:  This assertion might not hold.

    ┌── tests/sources/mut_ref_accross_modules.move:16:9 ───
    │
 16 │         invariant value > 0;
    │         ^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:110:6: private_to_public_caller_invalid_data_invariant (entry)
    =     at tests/sources/mut_ref_accross_modules.move:29:5: new (entry)
    =     at tests/sources/mut_ref_accross_modules.move:30:17: new
    =         x = <redacted>,
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:31:17: new
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:32:18: new
    =     at tests/sources/mut_ref_accross_modules.move:29:5: new (exit)
    =     at tests/sources/mut_ref_accross_modules.move:115:22: private_to_public_caller_invalid_data_invariant
    =         x = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:116:18: private_to_public_caller_invalid_data_invariant
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:67:5: private_decrement (entry)
    =     at tests/sources/mut_ref_accross_modules.move:68:27: private_decrement
    =         x = <redacted>,
    =         x = <redacted>,
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:69:41: private_decrement
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:70:17: private_decrement
    =         x = <redacted>,
    =         r = <redacted>
    =     at tests/sources/mut_ref_accross_modules.move:119:28: private_to_public_caller_invalid_data_invariant
    =     at tests/sources/mut_ref_accross_modules.move:121:20: private_to_public_caller_invalid_data_invariant
    =         r = <redacted>

error:  A precondition for this call might not hold.

    ┌── tests/sources/mut_ref_accross_modules.move:25:9 ───
    │
 25 │         invariant global<TSum>(0x0).sum == spec_sum;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/mut_ref_accross_modules.move:105:6: private_to_public_caller_invalid_precondition (entry)
    =     at tests/sources/mut_ref_accross_modules.move:46:5: increment (entry)
