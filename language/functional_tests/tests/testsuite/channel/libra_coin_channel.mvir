//! account: alice,1000000
//! account: bob,1000000

module Test{
    import 0x0.ChannelAccount;

    public assert_channel_balance(expect_sender_balance: u64, expect_receiver_balance:u64){
        assert(ChannelAccount.sender_balance() == move(expect_sender_balance), 1024);
        assert(ChannelAccount.receiver_balance() == move(expect_receiver_balance), 1025);
        return;
    }

    public assert_channel_closed(closed: bool){
        assert(ChannelAccount.sender_closed() == copy(closed), 42);
        assert(ChannelAccount.receiver_closed() == copy(closed), 42);
        return;
    }
}


//! new-transaction
//! sender: alice
//! receiver: bob

0x0.ChannelAccount.open 100000 50000

//! new-transaction
//! sender: alice
//! receiver: bob

0x0.ChannelAccount.deposit 10000 10000

//! new-transaction
//! sender: alice
//! receiver: bob

0x0.ChannelAccount.transfer 10000

//! new-transaction
//! sender: alice
//! receiver: bob

{{default}}.Test.assert_channel_balance 100000 70000

//! new-transaction
//! sender: alice
//! receiver: bob

0x0.ChannelAccount.withdraw 100000 70000

//! new-transaction
//! sender: alice
//! receiver: bob

{{default}}.Test.assert_channel_balance 0 0


//! new-transaction
//! sender: alice
//! receiver: bob

0x0.ChannelAccount.close

//! new-transaction
//! sender: alice
//! receiver: bob

{{default}}.Test.assert_channel_closed true
