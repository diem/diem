//! account: alice,1000000
//! account: bob,1000000

//! new-transaction
//! sender: alice
//! receiver: bob
//! args: 100000, 50000

import 0x0.ChannelAccount;
//open channel
main(sender_amount:u64, receiver_amount:u64) {
    ChannelAccount.open(move(sender_amount), move(receiver_amount));
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob
//! args: 10000, 10000

import 0x0.ChannelAccount;
//deposit
main(sender_amount:u64, receiver_amount:u64) {
    ChannelAccount.deposit(move(sender_amount), move(receiver_amount));
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob
//! args: 10000

import 0x0.ChannelAccount;
//transfer
main(amount:u64) {
    ChannelAccount.transfer(move(amount));
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob

import 0x0.ChannelAccount;

main() {

    assert(ChannelAccount.sender_balance() == 100000, 42);
    assert(ChannelAccount.receiver_balance() == 70000, 42);
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob

import 0x0.ChannelAccount;
//withdraw
main() {
    let sender_balance: u64;
    let receiver_balance: u64;

    sender_balance = ChannelAccount.sender_balance();
    receiver_balance = ChannelAccount.receiver_balance();
    ChannelAccount.withdraw(move(sender_balance), move(receiver_balance));

    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob

import 0x0.ChannelAccount;

main() {

    assert(ChannelAccount.sender_balance() == 0, 42);
    assert(ChannelAccount.receiver_balance() == 0, 42);
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob

import 0x0.ChannelAccount;
//close
main() {
    ChannelAccount.close();
    return;
}

//! new-transaction
//! sender: alice
//! receiver: bob

import 0x0.ChannelAccount;
main() {
    assert(ChannelAccount.sender_closed() == true, 42);
    assert(ChannelAccount.receiver_closed() == true, 42);
    return;
}