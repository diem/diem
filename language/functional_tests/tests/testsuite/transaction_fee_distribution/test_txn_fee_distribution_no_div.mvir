// Number of validators does not evenly divide the transaction fees collected.

import 0x0.LibraSystem;
import 0x0.TransactionFeeDistribution;
import 0x0.LibraAccount;
import 0x0.LibraCoin;

main() {
  let lib_coin: LibraCoin.T;
  let number_of_validators: u64;
  let index: u64;
  let addr: address;

  index = 0;

  number_of_validators = LibraSystem.validator_set_size();

  lib_coin = LibraAccount.withdraw_from_sender(copy(number_of_validators) * 10 + 1);
  LibraAccount.deposit({{fees}}, move(lib_coin));
  TransactionFeeDistribution.distribute_transaction_fees();

  while (copy(index) < copy(number_of_validators)) {
     addr = LibraSystem.get_ith_validator_address(copy(index));
     // The first validator is paid the remainder if the number of
     // validators does not evenly divide the transactions fees pot.
     if (copy(index) == 0) {
       assert(LibraAccount.balance(move(addr)) == 10, 2);
     } else {
       assert(LibraAccount.balance(move(addr)) == 10, 3);
     }
     index = move(index) + 1;
  }

  assert(LibraAccount.balance({{fees}}) < move(number_of_validators), 4);

  return;
}
