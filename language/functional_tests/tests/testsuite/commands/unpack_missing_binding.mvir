module Test {
    struct X { }
    struct T { i: u64, x: Self.X, b: bool, y: u64 }

    public new_t(): Self.T {
        let x: Self.X;
        x = X { };
        return T { i: 0, x: move(x), b: false, y: 0 };
    }

    public destroy_t(t: Self.T): u64 * Self.X * bool {
        let i: u64;
        let x: Self.X;
        let flag: bool;
        T { i, x, b: flag } = move(t);
        return move(i), move(x), move(flag);
    }

}

//! new-transaction

import {{default}}.Test;

main() {
    let x: Test.X;
    let i: u64;
    let t: Test.T;
    let b: bool;

    t = Test.new_t();
    i, x, b = Test.destroy_t(move(t));

    return;
}

// check: VerificationFailure
// check: POSITIVE_STACK_SIZE_AT_BLOCK_END
