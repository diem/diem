module A {
    struct T{f: u64}

    public new(f: u64): V#Self.T {
        return T{f: move(f)};
    }

    public t(this: &mut V#Self.T) {
        let f: &mut u64;
        f = &mut copy(this).f;
        *copy(f) = 2;
        assert(*move(f) == 2, 42);
        release(move(this));
        return;
    }
}

//! new-transaction

import {{default}}.A;

main() {
    let x: V#A.T;
    let x_ref: &mut V#A.T;
    x = A.new(0);
    x_ref = &mut x;
    A.t(move(x_ref));
    return;
}