error: 

    ┌── tests/move_check/typing/loop_result_type_invalid.move:11:9 ───
    │
 11 │         loop { if (false) break }
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid return expression
    ·
 11 │         loop { if (false) break }
    │         ------------------------- The type: '()'
    ·
 10 │     fun t0(): X::R {
    │               ---- Is not compatible with: '0x2::X::R'
    │

error: 

    ┌── tests/move_check/typing/loop_result_type_invalid.move:15:9 ───
    │
 15 │         loop { let x = 0; break }
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid return expression
    ·
 15 │         loop { let x = 0; break }
    │         ------------------------- The type: '()'
    ·
 14 │     fun t1(): u64 {
    │               --- Is not compatible with: 'u64'
    │

error: 

    ┌── tests/move_check/typing/loop_result_type_invalid.move:19:9 ───
    │
 19 │         foo(loop { break })
    │         ^^^^^^^^^^^^^^^^^^^ Invalid call of '0x2::M::foo'. Invalid argument for parameter 'x'
    ·
 19 │         foo(loop { break })
    │             -------------- The type: '()'
    ·
 22 │     fun foo(x: u64) {}
    │                --- Is not compatible with: 'u64'
    │

error: 

    ┌── tests/move_check/typing/loop_result_type_invalid.move:25:13 ───
    │
 25 │         let x = loop { break };
    │             ^ Invalid type for local
    ·
 25 │         let x = loop { break };
    │                 -------------- Expected a single type, but found expression list type: '()'
    │

error: 

    ┌── tests/move_check/typing/loop_result_type_invalid.move:26:13 ───
    │
 26 │         let (x, y) = loop { if (false) break };
    │             ^^^^^^ Invalid value for binding
    ·
 26 │         let (x, y) = loop { if (false) break };
    │             ------ The type: '(_, _)'
    ·
 26 │         let (x, y) = loop { if (false) break };
    │                      ------------------------- Is not compatible with: '()'
    │

