error: 

   ┌── tests/move_check/locals/unused_resource.move:5:13 ───
   │
 5 │         let r = R{};
   │             ^ Unused assignment or binding for local 'r'. Consider removing or replacing it with '_'
   │

error: 

   ┌── tests/move_check/locals/unused_resource.move:5:13 ───
   │
 5 │         let r = R{};
   │             - The local 'r' still contains a resource value due to this assignment. The resource must be consumed before the function returns
   │                    ^ Invalid return
   │

error: 

    ┌── tests/move_check/locals/unused_resource.move:10:21 ───
    │
 10 │         if (cond) { r = R{}; };
    │                     ^ Unused assignment or binding for local 'r'. Consider removing or replacing it with '_'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:10:21 ───
    │
 10 │         if (cond) { r = R{}; };
    │                     - The local 'r' might still contain a resource value due to this assignment. The resource must be consumed before the function returns
    │                               ^ Invalid return
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:15:29 ───
    │
 15 │         if (cond) {} else { r = R{}; };
    │                             ^ Unused assignment or binding for local 'r'. Consider removing or replacing it with '_'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:15:29 ───
    │
 15 │         if (cond) {} else { r = R{}; };
    │                             - The local 'r' might still contain a resource value due to this assignment. The resource must be consumed before the function returns
    │                                       ^ Invalid return
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:20:24 ───
    │
 20 │         while (cond) { r = R{} };
    │                        ^ Unused assignment or binding for local 'r'. Consider removing or replacing it with '_'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:20:24 ───
    │
 20 │         while (cond) { r = R{} };
    │                        - The local might contain a resource value due to this assignment. The resource must be used before you assign to this local again
    │                        ^ Invalid assignment to local 'r'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:20:24 ───
    │
 20 │         while (cond) { r = R{} };
    │                        - The local 'r' might still contain a resource value due to this assignment. The resource must be consumed before the function returns
    │                                 ^ Invalid return
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:24:20 ───
    │
 24 │         loop { let r = R{}; }
    │                    ^ Unused assignment or binding for local 'r'. Consider removing or replacing it with '_'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:24:20 ───
    │
 24 │         loop { let r = R{}; }
    │                    - The local might contain a resource value due to this assignment. The resource must be used before you assign to this local again
    │                    ^ Invalid assignment to local 'r'
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:28:18 ───
    │
 28 │         let _ = &R{};
    │                  --- The resource is created but not used. The resource must be consumed before the function returns
    │                     ^ Invalid return
    │

error: 

    ┌── tests/move_check/locals/unused_resource.move:31:15 ───
    │  
 31 │       fun t6<T>(_x: R) {
    │                 -- The parameter '_x' still contains a resource value. The resource must be consumed before the function returns
    │ ╭──────────────────────^
 32 │ │     }
    │ ╰─────^ Invalid return
    │  

