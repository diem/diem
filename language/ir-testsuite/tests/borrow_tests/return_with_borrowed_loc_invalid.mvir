module M {
    struct X { y: Self.Y }
    struct Y { u: u64 }

    t1(): &u64 {
        let x: u64;
        let y: &u64;
        x = 0;
        y = &x;
        return move(y);
    }

    t2(): &u64 {
        let x: u64;
        let y: &u64;
        x = 0;
        y = &x;
        return copy(y);
    }

    t3(): &u64 {
        let s: Self.X;
        let x: &Self.X;
        let y: &Self.Y;
        let u: &u64;
        s = X { y: Y { u: 0 } };
        x = &s;
        y = &move(x).y;
        u = &move(y).u;
        return move(u);
    }

    t4(): &u64 {
        let s: Self.X;
        let x: &Self.X;
        let y: &Self.Y;
        let u: &u64;
        s = X { y: Y { u: 0 } };
        x = &s;
        y = &copy(x).y;
        u = &copy(y).u;
        return copy(u);
    }
}

// check: RET_UNSAFE_TO_DESTROY_ERROR
// check: RET_UNSAFE_TO_DESTROY_ERROR
// check: RET_UNSAFE_TO_DESTROY_ERROR
// check: RET_UNSAFE_TO_DESTROY_ERROR
