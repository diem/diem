module A {
    import 0x1.Signer;
    resource T1{v: u64}
    resource T2{v: u64}

    public test1(account: &signer) acquires T1, T2 {
        let x: &mut Self.T1;
        let y: &mut u64;
        x = borrow_global_mut<T1>(Signer.address_of(copy(account)));
        y = Self.get_v(move(x));
        Self.acquires_t2(copy(account));
        _ = move(y);
        Self.acquires_t1(move(account));

        return;
    }

    public test2(account: &signer) acquires T1, T2 {
        let x: &mut Self.T1;
        let y: &mut u64;
        x = borrow_global_mut<T1>(Signer.address_of(copy(account)));
        y = Self.get_v(move(x));
        _ = move(y);
        Self.acquires_t1(copy(account));
        Self.acquires_t2(move(account));

        return;
    }

    public test3(account: &signer) acquires T1, T2 {
        let x: &mut Self.T1;
        let y: &mut u64;
        x = borrow_global_mut<T1>(Signer.address_of(copy(account)));
        y = Self.get_v(move(x));
        _ = move(y);
        Self.acquires_t2(copy(account));
        Self.acquires_t1(move(account));

        return;
    }

    get_v(x: &mut Self.T1): &mut u64 {
        return &mut move(x).v;
    }

    acquires_t1(account: &signer) acquires T1 {
        let v: u64;
        T1 { v } = move_from<T1>(Signer.address_of(move(account)));
        return;
    }

    acquires_t2(account: &signer) acquires T2 {
        let v: u64;
        T2 { v } = move_from<T2>(Signer.address_of(move(account)));
        return;
    }

}
