import 0x1.LibraAccount;
import 0x1.LBR;
import 0x1.Libra;
import 0x1.Signer;

main(account: &signer) {
    let addr: address;
    let sender_original_balance: u64;
    let five_coins: Libra.Libra<LBR.LBR>;
    let five_coins_ref: &Libra.Libra<LBR.LBR>;
    let five_coins_value: u64;
    let sender_new_balance: u64;
    let with_cap: LibraAccount.WithdrawCapability;

    addr = Signer.address_of(copy(account));
    sender_original_balance = LibraAccount.balance<LBR.LBR>(copy(addr));
    with_cap = LibraAccount.extract_withdraw_capability(copy(account));
    five_coins = LibraAccount.withdraw_from<LBR.LBR>(&with_cap, 5);
    LibraAccount.restore_withdraw_capability(move(with_cap));

    five_coins_ref = &five_coins;
    five_coins_value = Libra.value<LBR.LBR>(move(five_coins_ref));
    assert(move(five_coins_value) == 5, 66);

    sender_new_balance = LibraAccount.balance<LBR.LBR>(copy(addr));
    assert(copy(sender_new_balance) == copy(sender_original_balance) - 5, 77);
    LibraAccount.deposit_to<LBR.LBR>(move(account), move(five_coins));

    return;
}
