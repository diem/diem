module M {
    struct T{f: u64}

    public new(g: u64): Self.T {
        return T{f: move(g)};
    }

    public t(this: &Self.T) {
        let y: u64;
        y = *&move(this).f;
        assert(copy(y) == 2, 42);
        return;
    }
}

//! new-transaction

import {{default}}.M;

main(){
    let x: M.T;
    let x_ref: &M.T;
    x = M.new(2);
    x_ref = &x;
    M.t(move(x_ref));
    return;
}
