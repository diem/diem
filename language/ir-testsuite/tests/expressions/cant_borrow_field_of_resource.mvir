// check: Unbound field v

module Token {
    resource T {v: u64}

    public new(v: u64): Self.T {
        return T{v: move(v)};
    }

    public value(this: &Self.T): u64 {
        let vref: &u64;
        vref = &copy(this).v;
        _ = move(this);
        return *move(vref);
    }

    public exists(addr: address): bool {
        let yes: bool;
        yes = exists<T>(move(addr));
        return move(yes);
    }

    public publish(account: &signer, t: Self.T) {
        move_to<T>(move(account), move(t));
        return;
    }

}

//! new-transaction

import {{default}}.Token;

main() {
    let t: Token.T;
    let tref: &mut Token.T;
    let balance_ref: &u64;

    t = Token.new(1);
    tref = &mut t;
    balance_ref = &move(tref).v;
    _ = move(balance_ref);
    return;
}
