//! account: alice, 1000000
//! account: bob, 1000000
//! account: carol, 0


// Transfer all of the Alice's funds to Carol. this script will execute successfully, but
// the epilogue will fail because Alice spent her gas deposit. The VM should revert the state
// changes and re-execute the epilogue. Alice will still be charged for the gas she used.

//! sender: alice
//! args: 1000000
import 0x0.LibraAccount;
import 0x0.LBR;
import 0x0.Vector;

main(amount: u64) {
    LibraAccount.pay_from_sender<LBR.T>({{carol}}, Vector.empty<u8>(), move(amount));
    return;
}

// check: ABORTED
// check: 6


// Bob sends the same transaction script, with the amount set to 1000 instead of his full balance.
// This transaction should go through and bob will pay for the gas he used.

//! new-transaction
//! sender: bob
//! args: 1000
import 0x0.LibraAccount;
import 0x0.LBR;
import 0x0.Vector;

main(amount: u64) {
    LibraAccount.pay_from_sender<LBR.T>({{carol}}, Vector.empty<u8>(), move(amount));
    return;
}

// check: EXECUTED


// Check that the following invariants holds:
// 1) Carol's balance has went up by 1000, receiving funds from Bob but not Alice.
// 2) Alice's balance is exactly 1000 greater than Bob's, indicating they consumed the same amount of gas.

//! new-transaction
import 0x0.LibraAccount;
import 0x0.LBR;

main() {
    assert(LibraAccount.balance<LBR.T>({{carol}}) == 1000, 42);
    assert(LibraAccount.balance<LBR.T>({{alice}}) == LibraAccount.balance<LBR.T>({{bob}}) + 1000, 43)
    return;
}

// check: EXECUTED
