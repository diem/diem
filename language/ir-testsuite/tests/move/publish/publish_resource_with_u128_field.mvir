module M {
    import 0x1.Signer;

    struct Foo has key {
        x: u128,
    }

    public foo(account: &signer) {
        move_to<Foo>(move(account),Foo {x: 100u128});
        return;
    }

    public bar(account: &signer): u128 acquires Foo {
        let x: u128;
        Foo { x } = move_from<Foo>(Signer.address_of(move(account)));
        return move(x);
    }
}


//! new-transaction
import {{default}}.M;

main(account: signer) {
    M.foo(&account);
    return;
}

//! new-transaction
import {{default}}.M;

main(account: signer) {
    assert(M.bar(&account) == 100u128, 42);
    return;
}
