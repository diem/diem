module M {
    import 0x1.Event;

    struct MyEvent { b: bool }

    public emit_event(account: &signer) {
        let handle: Event.EventHandle<Self.MyEvent>;
        handle = Event.new_event_handle<Self.MyEvent>(move(account));
        Event.emit_event<Self.MyEvent>(&mut handle, MyEvent{ b: true });
        Event.destroy_handle<Self.MyEvent>(move(handle));
        return;
    }
}


//! new-transaction
import {{default}}.M;

main(account: &signer) {
    M.emit_event(move(account));
    return;
}

// check: ContractEvent
// check: MyEvent
// check: "Keep(EXECUTED)"
