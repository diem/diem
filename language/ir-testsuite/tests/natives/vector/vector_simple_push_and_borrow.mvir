module M {
  import 0x1.Vector;

  public empty() {
    let v: vector<u64>;

    v = Vector.empty<u64>();
    assert(Vector.is_empty<u64>(&v), 100);
    assert(Vector.length<u64>(&v) == 0, 101);

    return;
  }

  public push_back_and_borrow() {
    let v: vector<u64>;

    v = Vector.empty<u64>();
    Vector.push_back<u64>(&mut v, 7);
    assert(!Vector.is_empty<u64>(&v), 102);
    assert(Vector.length<u64>(&v) == 1, 103);
    assert(*Vector.borrow<u64>(&v, 0) == 7, 104);

    Vector.push_back<u64>(&mut v, 8);
    assert(Vector.length<u64>(&v) == 2, 105);
    assert(*Vector.borrow<u64>(&v, 0) == 7, 106);
    assert(*Vector.borrow<u64>(&v, 1) == 8, 107);

    return;
  }
}

//! new-transaction
import {{default}}.M;
main() {
    M.empty();
    M.push_back_and_borrow();
    return;
}
