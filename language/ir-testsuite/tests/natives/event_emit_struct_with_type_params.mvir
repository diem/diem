module M {
    import 0x0.LibraAccount;

    struct MyEvent<T1, T2> { b: bool }

    public emit_event<T1: copyable, T2: copyable>() {
        let handle: LibraAccount.EventHandle<Self.MyEvent<T2, T1>>;
        handle = LibraAccount.new_event_handle<Self.MyEvent<T2, T1>>();
        LibraAccount.emit_event<Self.MyEvent<T2, T1>>(&mut handle, MyEvent<T2, T1>{ b: true });
        LibraAccount.destroy_handle<Self.MyEvent<T2, T1>>(move(handle));
        return;
    }
}


//! new-transaction
import {{default}}.M;

main() {
    M.emit_event<bool, u64>();
    return;
}

// check: ContractEvent
// check: M
// check: MyEvent
// check: U64
// check: Bool
// check: EXECUTED
