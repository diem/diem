import 0x0.Signature;

main() {
    let bitmap: vector<u8>;
    let signatures: vector<u8>;
    let public_keys: vector<u8>;
    let message: vector<u8>;

    let output: u64;
    let expected_output: u64;

    // This is "10000000000000000000000000000000" in hex denoting that we have one signature which should be verified
    // against the 1st public key.
    bitmap = h"80000000";
    signatures = h"62d6be393b8ec77fb2c12ff44ca8b5bd8bba83b805171bc99f0af3bdc619b20b8bd529452fe62dac022c80752af2af02fb610c20f01fb67a4d72789db2b8b703";
    public_keys = h"7013b6ed7dde3cfb1251db1b04ae9cd7853470284085693590a75def645a926d";
    message = h"0000000000000000000000000000000000000000000000000000000000000000";

    output = Signature.ed25519_threshold_verify(move(bitmap), move(signatures), move(public_keys), move(message));
    expected_output = 1;

    assert(move(output) == move(expected_output), 42);

    return;
}
