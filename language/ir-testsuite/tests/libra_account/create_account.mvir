import 0x0.LibraAccount;
import 0x0.LBR;
import 0x0.LCS;
import 0x0.Libra;

main() {
    let addr: address;
    let account_exists: bool;
    let ten_coins: Libra.T<LBR.T>;
    let account_exists_now: bool;
    let account2_balance: u64;
    let account2_sequence_number: u64;

    addr = 0x111101;
    account_exists = LibraAccount.exists(copy(addr));
    assert(!move(account_exists), 83);

    ten_coins = LibraAccount.withdraw_from_sender<LBR.T>(10);
    LibraAccount.create_account(copy(addr), LCS.to_bytes<address>(&addr));
    LibraAccount.deposit<LBR.T>(copy(addr), move(ten_coins));

    account_exists_now = LibraAccount.exists(copy(addr));
    assert(move(account_exists_now), 84);
    account2_balance = LibraAccount.balance<LBR.T>(copy(addr));
    assert(move(account2_balance) == 10, 84);
    account2_sequence_number = LibraAccount.sequence_number(move(addr));
    assert(move(account2_sequence_number) == 0, 84);

    return;
}
