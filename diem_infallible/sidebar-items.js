initSidebarItems({"fn":[["duration_since_epoch","Gives the duration since the Unix epoch, notice the expect."]],"macro":[["NonZeroUsize","A wrapper around `std::num::NonZeroUsize` to no longer worry about `unwrap()`"],["checked","Utility macro for writing secure arithmetic operations in order to avoid integer overflows."]],"struct":[["ArithmeticError",""],["Mutex","A simple wrapper around the lock() function of a std::sync::Mutex The only difference is that you don’t need to call unwrap() on it."],["MutexGuard","An RAII implementation of a “scoped lock” of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."],["RwLock","A simple wrapper around the lock() function of a std::sync::RwLock The only difference is that you don’t need to call unwrap() on it."],["RwLockReadGuard","RAII structure used to release the shared read access of a lock when dropped."],["RwLockWriteGuard","RAII structure used to release the exclusive write access of a lock when dropped."]]});