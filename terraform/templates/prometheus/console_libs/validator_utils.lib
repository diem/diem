{{ define "validators_table" }}
<table class="table table-condensed table-striped table-bordered" style="width: 75%">
  <tr>
    <th>Validators</th>
    <th>Up</th>
    <th>Connected<br/>Peers</th>
    <th>CPU Used</th>
    <th>Memory<br/> Available</th>
    <th>Revision</th>
  </tr>
  {{ range query "up{job='validators'}" | sortByLabel "instance" }}
  <tr>
    <td><a href="validator-overview.html?address={{ .Labels.address }}">{{ reReplaceAll "(.*?://)([^:/]+?)(:\\d+)?/.*" "$2" .Labels.peer_id }}</a></td>

    <td{{ if eq (. | value) 1.0 }}>Yes{{ else }} class="alert-danger">No{{ end }}</td>

    <td>{{ template "prom_query_drilldown" (args (printf "network_gauge{op='connected_peers',job='validators',instance='%s'}" .Labels.instance) "") }}</td>

    <td>{{ template "prom_query_drilldown" (args (printf "100 * (1 - avg by(address)(irate(node_cpu_seconds_total{job='node_exporter',mode='idle',address='%s'}[5m])))" .Labels.address) "%" "printf.1f") }}</td>

    <td>{{ template "prom_query_drilldown" (args (printf "node_memory_MemFree_bytes{job='node_exporter',address='%s'} + node_memory_Cached_bytes{job='node_exporter',address='%s'} + node_memory_Buffers_bytes{job='node_exporter',address='%s'}" .Labels.address .Labels.address .Labels.address) "B" "humanize1024") }}</td>

    <td>{{ with query (printf "build_info{address='%s'}" .Labels.address) }}{{. | first | label "revision" | printf "%.8s"}}{{end}}</td>
  </tr>
  {{ else }}
  <tr><td colspan=4>No nodes found.</td></tr>
  {{ end }}
</table>
{{ end }}
