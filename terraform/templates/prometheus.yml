# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - ${monitoring_private_ip}:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/recording_rules.yml"
  - "rules/blockchain_alerts.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          workspace: '${workspace}'
          role: 'prometheus'

  - job_name: 'pushgateway'
    honor_labels: true
    static_configs:
      - targets: ['${monitoring_private_ip}:9092']
        labels:
          workspace: '${workspace}'

  - job_name: 'other_nodes'
    static_configs:
      %{ for target in split(",", other_nodes) }
      - targets: ['${element(split(":", target), 0)}:9100']
        labels:
          role: '${element(split(":", target), 1)}'
          workspace: '${workspace}'
      %{ endfor }
    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'

  - job_name: 'validator_instances'
    static_configs:
      %{ for target in split(",", validators) }
      - targets: ['${element(split(":", target), 0)}:9100']
        labels:
          peer_id: 'val-${substr(element(split(":", target), 1), 0, 8)}'
          role: 'validator'
          workspace: '${workspace}'
      %{ endfor }

    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'

  - job_name: 'validators'
    static_configs:
      %{ for target in split(",", validators) }
      - targets: ['${element(split(":", target), 0)}:9101']
        labels:
          peer_id: 'val-${substr(element(split(":", target), 1), 0, 8)}'
          role: 'validator'
          workspace: '${workspace}'
      %{ endfor }

    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'

  - job_name: 'fullnode_instances'
    static_configs:
      %{ for target in split(",", fullnodes) }
      - targets: ['${element(split(":", target), 0)}:9100']
        labels:
          peer_id: 'fn-${substr(element(split(":", target), 1), 0, 8)}'
          role: 'fullnode'
          workspace: '${workspace}'
      %{ endfor }

    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'

  - job_name: 'fullnodes'
    static_configs:
      %{ for target in split(",", fullnodes) }
      - targets: ['${element(split(":", target), 0)}:9101']
        labels:
          peer_id: 'fn-${substr(element(split(":", target), 1), 0, 8)}'
          role: 'fullnode'
          workspace: '${workspace}'
      %{ endfor }

    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'

  - job_name: 'vault'
    metrics_path: '/v1/sys/metrics'
    params:
      format: ['prometheus']

    static_configs:
      - targets: ['${vault_ip}:8200']
        labels:
          role: 'vault'
          workspace: '${workspace}'

    relabel_configs:
      - source_labels: ['__address__']
        # NOTICE: not tested with IPv6
        regex: '([0-9\.]+):\d+'
        target_label: 'address'
        replacement: '$1'
