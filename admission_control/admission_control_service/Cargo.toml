[package]
name = "admission_control_service"
version = "0.1.0"
authors = ["Libra Association <opensource@libra.org>"]
license = "Apache-2.0"
publish = false
edition = "2018"

[dependencies]
futures_01 = {version = "0.1.28", package = "futures"}
futures = { version = "=0.3.0-alpha.19", package = "futures-preview", features = ["compat"] }
grpcio = { version = "0.4.4", default-features = false, features = ["protobuf-codec"] }
grpcio-sys = "0.4.4"
lazy_static = "1.3.0"
protobuf = "~2.7"
rand = "0.6.5"
tokio = "0.1.22"

admission_control_proto = { path = "../admission_control_proto" }
config = { path = "../../config" }
crypto = { path = "../../crypto/crypto" }
debug_interface = { path = "../../common/debug_interface" }
failure = { package = "failure_ext", path = "../../common/failure_ext" }
executable_helpers = { path = "../../common/executable_helpers" }
grpc_helpers = { path = "../../common/grpc_helpers" }
logger = { path = "../../common/logger" }
mempool = { path = "../../mempool" }
metrics = { path = "../../common/metrics" }
proto_conv = { path = "../../common/proto_conv" }
storage_client = { path = "../../storage/storage_client" }
types = { path = "../../types" }
vm_validator = { path = "../../vm_validator" }
network = { path = "../../network" }

storage_service = { path = "../../storage/storage_service", optional = true }
proptest_helpers = { path = "../../common/proptest_helpers", optional = true }
proptest = { version = "0.9.4", optional = true }

[dev-dependencies]
assert_matches = "1.3.0"
storage_service = { path = "../../storage/storage_service" }
types = { path = "../../types", features = ["testing"] }
proptest_helpers = { path = "../../common/proptest_helpers" }
proptest = "0.9.4"

[build-dependencies]
build_helpers = { path = "../../common/build_helpers" }

[features]
default = []
fuzzing = ["storage_service", "proptest_helpers", "proptest"]
