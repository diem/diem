name: "DockerHub Login"
description: "Login to Dockerhub and prepare signing key"
inputs:
  username:
    description: "Dockerhub Username"
    required: true
  password:
    description: "Dockerhub Password"
    required: true
  key_material:
    description: "base64 encoded key file contents"
    required: false
  key_name:
    description: "The name of the base64 encoded key as generated by docker in .docker/trust/private/ folder"
    required: false
  key_password:
    description: "The password for the base64 encoded key"
    required: false
outputs:
  dockerhub_logged_in:
    description: Are we logged in to dockerhub, only true if u/p are provided
    value: ${{ steps.login.outputs.dockerhub_logged_in }}
  dockerhub_can_sign:
    description: Is dockerhub image signing available, only true if all credentials are provided.
    value: ${{ steps.login.outputs.dockerhub_can_sign }}
runs:
  using: "composite"
  steps:
    - id: login
      run: |
        DOCKERHUB_LOGGED_IN=false
        DOCKERHUB_CAN_SIGN=false
        if [ -n "${DOCKERHUB_USERNAME}" ] && [ -n "${DOCKERHUB_PASSWORD}" ]; then
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          DOCKERHUB_LOGGED_IN=true
          if [ -n "${DOCKERHUB_KEY_MATERIAL}" ] && [ -n "${DOCKERHUB_KEY_NAME}" ] && [ -n "${DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE}" ]; then
            mkdir -p ~/.docker/trust/private/
            echo ${DOCKERHUB_KEY_MATERIAL} | base64 -d > ~/.docker/trust/private/${DOCKERHUB_KEY_NAME}.key
            chmod 600 ~/.docker/trust/private/${DOCKERHUB_KEY_NAME}.key
            docker trust key load ~/.docker/trust/private/${DOCKERHUB_KEY_NAME}.key --name "$DOCKERHUB_USERNAME"
            echo Docker hub is logged in, and signing is available.
            DOCKERHUB_CAN_SIGN=true
          else
            echo Docker hub is logged in, no signing key is available.
          fi
        else
          echo Since no dockerhub credentials were provided, not logging in to dockerhub and no key signing is available.
        fi
        echo "DOCKERHUB_LOGGED_IN=${DOCKERHUB_LOGGED_IN}" >> $GITHUB_ENV
        echo "DOCKERHUB_CAN_SIGN=${DOCKERHUB_CAN_SIGN}" >> $GITHUB_ENV
        echo "::set-output name=dockerhub_logged_in::$(echo $DOCKERHUB_LOGGED_IN)"
        echo "::set-output name=dockerhub_can_sign::$(echo $DOCKERHUB_CAN_SIGN)"
      shell: bash
      env:
        DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ inputs.key_password }}
        DOCKERHUB_USERNAME: ${{ inputs.username }}
        DOCKERHUB_PASSWORD: ${{ inputs.password }}
        DOCKERHUB_KEY_MATERIAL: ${{ inputs.key_material }}
        DOCKERHUB_KEY_NAME: ${{ inputs.key_name }}
