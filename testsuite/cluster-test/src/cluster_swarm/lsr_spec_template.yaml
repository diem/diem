apiVersion: v1
kind: Pod
metadata:
  name: lsr-{validator_index}
  labels:
    app: libra-lsr
    libra-node: "true"
    peer_id: lsr-{validator_index}
spec:
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  serviceAccountName: clustertest
  nodeSelector:
    nodeType: validators
  nodeName: "{node_name}"
  initContainers:
    - name: init
      image: 853397791086.dkr.ecr.us-west-2.amazonaws.com/libra_init:{image_tag}
      imagePullPolicy: Always
      command:
        - bash
        - -c
        - |
          set -x
          mkdir -p /opt/libra/data/fluent-bit/
          cat << EOF > /opt/libra/data/fluent-bit/parsers.conf
          [PARSER]
            Name        events
            Format      json
            Time_Key    timestamp
            Time_Format %Y-%m-%d %H:%M:%S
          EOF
          cat << EOF > /opt/libra/data/fluent-bit/fluent-bit.conf
          [SERVICE]
              Flush         5
              Log_Level     info
              Daemon        off
              Parsers_File  /opt/libra/data/fluent-bit/parsers.conf

          [INPUT]
              Name              tail
              Tag               safety-rules
              Path              /opt/libra/data/libra.log
              Mem_Buf_Limit     200MB
              Refresh_Interval  10
              Skip_Long_Lines   On

          [INPUT]
              Name              tail
              Tag               safety-rules-events
              Path              /opt/libra/data/events.log
              Mem_Buf_Limit     200MB
              Refresh_Interval  10
              Skip_Long_Lines   On
              Parser            events

          [FILTER]
              Name record_modifier
              Match *
              Record kubernetes.pod_name {pod_name}

          [OUTPUT]
              Name            es
              Match           *
              Host            elasticsearch-master
              Port            9200
              Logstash_Format On
              Replace_Dots    Off
              Retry_Limit     False
              Logstash_Prefix kubernetes_cluster
          EOF
          if [[ {lsr_backend} = "vault" ]]; then
          while true; do
            health_out=$(wget --content-on-error -O- http://vault-{validator_index}.default.svc.cluster.local:8200/v1/sys/health)
            if [[ "$health_out" != *'"initialized":true'* ]] || [[ "$health_out" != *'"sealed":false'* ]]; then
              echo "healthcheck failed for vault. healthcheck msg: $health_out. Retrying in 5 secs"
              sleep 5
            else
              echo "healthcheck passed for vault"
              break
            fi
          done
          while true; do
            transit_keys=$(wget --content-on-error --method LIST -O- --header 'X-Vault-Token: root' http://vault-{validator_index}.default.svc.cluster.local:8200/v1/transit/keys)
            if [[ "$transit_keys" == *'no handler for route'* ]]; then
              echo "transit_keys not yet enabled for vault. transit_keys msg: $transit_keys. Retrying in 5 secs"
              sleep 5
            else
              echo "transit_keys enabled for vault"
              break
            fi
          done
          until [ $(kubectl get pods -l app=libra-vault | grep ^vault | grep Running | grep '2/2' | wc -l) = "{num_validators}" ]; do
            sleep 3;
            echo "Waiting for all vaults to be healthy";
          done
          echo "All vaults are healthy.."
          fi
          /opt/libra/bin/config-builder safety-rules -n "{num_validators}" -g "{num_validators}" -i "{validator_index}" -s "$VALIDATOR_SEED" -o built/ --safety-rules-addr "0.0.0.0:6185" --safety-rules-backend={lsr_backend} --safety-rules-host=http://vault-{validator_index}.default.svc.cluster.local:8200 --safety-rules-token=root -d /opt/libra/data
      workingDir: /opt/libra/etc
      volumeMounts:
        - name: config-built
          mountPath: /opt/libra/etc/built
        - name: libra-data
          mountPath: /opt/libra/data
        - name: tmp
          mountPath: /tmp
      env:
        - name: VALIDATOR_SEED
          value: "{cfg_seed}"
        - name: RUST_BACKTRACE
          value: "1"
  containers:
    - name: fluent-bit
      image: 853397791086.dkr.ecr.us-west-2.amazonaws.com/fluent-bit:1.3.9
      imagePullPolicy: IfNotPresent
      command: ["/fluent-bit/bin/fluent-bit", "-c", "/opt/libra/data/fluent-bit/fluent-bit.conf"]
      volumeMounts:
      - mountPath: /opt/libra/data
        name: libra-data
    - name: main
      image: 853397791086.dkr.ecr.us-west-2.amazonaws.com/libra_safety_rules:{image_tag}
      imagePullPolicy: Always
      command: ["/opt/libra/bin/safety-rules", "/opt/libra/etc/node.yaml"]
      ports:
        - containerPort: 6185
      volumeMounts:
        - name: config-built
          mountPath: /opt/libra/etc
        - name: libra-data
          mountPath: /opt/libra/data
        - name: vault-token
          mountPath: /opt/vault
      env:
        - name: RUST_LOG
          value: debug
        - name: RUST_BACKTRACE
          value: "1"
        - name: PUSH_METRICS_ENDPOINT
          value: "http://libra-testnet-prometheus-pushgateway:9091/metrics/job/safety_rules/instance/lsr-{validator_index}"
  volumes:
    - name: config-built
      emptyDir: {{}}
    - name: libra-data
      hostPath:
        path: /data
        type: DirectoryOrCreate
    - name: tmp
      emptyDir: {{}}
    - name: vault-token
      emptyDir:
        medium: Memory
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: libra-node
                operator: Exists
          topologyKey: "kubernetes.io/hostname"
  terminationGracePeriodSeconds: 5
  tolerations:
    - key: "validators"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node.kubernetes.io/not-ready"
      operator: "Exists"
      effect: "NoSchedule"
